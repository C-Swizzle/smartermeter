--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: body
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: code
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: filename
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: response
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  name: uri
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::H 
  level: 1
  text: Synopsis
- !ruby/struct:SM::Flow::P 
  body: This is the default (and base) class for the Pluggable Parsers. If Mechanize cannot find an appropriate class to use for the content type, this class will be used. For example, if you download a JPG, Mechanize will not know how to parse it, so this class will be instantiated.
- !ruby/struct:SM::Flow::P 
  body: This is a good class to use as the base class for building your own pluggable parsers.
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: " require 'rubygems'\n require 'mechanize'\n\n agent = WWW::Mechanize.new\n agent.get('http://example.com/foo.jpg').class  #=&gt; WWW::Mechanize::File\n"
constants: []

full_name: WWW::Mechanize::File
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: save
- !ruby/object:RI::MethodSummary 
  name: save_as
name: File
superclass: Object
